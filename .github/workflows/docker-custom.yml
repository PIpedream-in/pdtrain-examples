name: Docker Custom Training Example

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'docker-custom-simple/**'

jobs:
  train:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      # Note: This example assumes you have a Docker image already pushed to ECR
      # For a complete example including Docker build, see the GitHub Actions examples repo

      - name: Upload dataset
        id: dataset
        uses: PIpedream-in/upload-dataset-action@v1
        with:
          api-key: ${{ secrets.PDTRAIN_API_KEY }}
          api-url: https://6c68b9fad00b.ngrok-free.app
          path: ./docker-custom-simple/data
          name: docker-custom-data-${{ github.run_number }}
          description: Docker mode training dataset

      - name: Train with Custom Docker Image
        id: train
        uses: PIpedream-in/train-ml-action@v1
        with:
          api-key: ${{ secrets.PDTRAIN_API_KEY }}
          image: ${{ secrets.DOCKER_IMAGE_URI }}  # Your ECR image URI
          entry-point: train.py
          dataset: ${{ steps.dataset.outputs.dataset-id }}
          parameters: |
            fit_intercept: true
            normalize: false

      - name: Show results
        run: |
          echo "## Docker Training Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Run ID:** \`${{ steps.train.outputs.run-id }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ${{ steps.train.outputs.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Cost:** \$${{ steps.train.outputs.cost }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Runtime:** ${{ steps.train.outputs.runtime-seconds }}s" >> $GITHUB_STEP_SUMMARY
